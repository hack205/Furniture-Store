services:
    app:
        container_name: app
        build:
            context: ./docker/8.3
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: store
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost"]
            interval: 30s
            timeout: 15s
            retries: 5
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            CONTAINER_ROLE: app
            SUPERVISOR_PHP_COMMAND: "/usr/bin/php -d variables_order=EGPCS /var/www/html/artisan serve --host=0.0.0.0 --port=80"
        env_file:
            - .env
        volumes:
            - '.:/var/www/html'
        links:
            - minio
        networks:
            - sail
        depends_on:
            - mysql

    scheduler:
        container_name: scheduler
        build:
            context: ./docker/8.3
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: store
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost" ]
            interval: 30s
            timeout: 15s
            retries: 5
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            WWWUSER: '${WWWUSER}'
            CONTAINER_ROLE: scheduler
        env_file:
            - .env
        volumes:
            - '.:/var/www/html'
        links:
            - minio
        networks:
            - sail
        depends_on:
            - mysql

    queue:
        container_name: queue
        build:
            context: ./docker/8.3
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: store
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost" ]
            interval: 30s
            timeout: 15s
            retries: 5
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            WWWUSER: '${WWWUSER}'
            CONTAINER_ROLE: queue
            SUPERVISOR_PHP_COMMAND: "/usr/bin/php -d variables_order=EGPCS /var/www/html/artisan queue:work --timeout=595"
        env_file:
            - .env
        volumes:
            - '.:/var/www/html'
        links:
            - minio
        networks:
            - sail
        depends_on:
            - mysql

    horizon:
        container_name: horizon
        build:
            context: ./docker/8.3
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
                CONTAINER_ROLE: horizon
                WWWUSER: '${WWWUSER}'
                LARAVEL_SAIL: 1
                XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
                XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
                SUPERVISOR_PHP_COMMAND: "/usr/bin/php -d variables_order=EGPCS /var/www/html/artisan horizon"
        image: store
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost" ]
            interval: 30s
            timeout: 15s
            retries: 5
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            SUPERVISOR_PHP_COMMAND: "/usr/bin/php -d variables_order=EGPCS /var/www/html/artisan horizon"
        env_file:
            - .env
        volumes:
            - '.:/var/www/html'
        links:
            - minio
        networks:
            - sail
        depends_on:
            - mysql

    mysql:
        image: 'mysql/mysql-server:8.0'
        container_name: mysql
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        command: '--sql-mode=ALLOW_INVALID_DATES,NO_ENGINE_SUBSTITUTION'
        volumes:
            - './volumen_mysql:/var/lib/mysql'
        networks:
            - sail
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
            retries: 3
            timeout: 5s

    minio:
        container_name: minio
        image: 'minio/minio:latest'
        ports:
            - '${FORWARD_MINIO_PORT:-9000}:9000'
            - '${FORWARD_MINIO_CONSOLE_PORT:-8900}:8900'
        environment:
            MINIO_ROOT_USER: '${MINIO_ROOT_USER}'
            MINIO_ROOT_PASSWORD: '${MINIO_ROOT_PASSWORD}'
        volumes:
            - ./volumen_minio/data:/data
        hostname: minio
        networks:
            - sail
        command: minio server /data/minio --console-address ":8900"
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
            retries: 3
            timeout: 5s

    redis:
        container_name: redis
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        command: redis-server --appendonly yes --replica-read-only no
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s

    dbgate:
        container_name: dbgate
        image: dbgate/dbgate:latest
        restart: always
        ports:
            - '${DBGATE_PORT:-81}:3000'
        volumes:
            - ./volumen_gate:/root/.dbgate
        networks:
            - sail
        depends_on:
            - mysql
            - redis
        environment:
            CONNECTIONS: con1,con2

            LABEL_con1: DB
            SERVER_con1: mysql
            USER_con1: ${DB_USERNAME}
            PASSWORD_con1: ${DB_PASSWORD}
            PORT_con1: 3306
            ENGINE_con1: mysql@dbgate-plugin-mysql

            LABEL_con2: Redis
            SERVER_con2: redis
            PORT_con2: 6379
            ENGINE_con2: redis@dbgate-plugin-redis

networks:
    sail:
        driver: bridge
volumes:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
